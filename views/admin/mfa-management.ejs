<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin: MFA Management - <%= poolName || 'Identity Server' %></title>
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.0/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <style>
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-enabled { background-color: #28a745; }
        .status-disabled { background-color: #dc3545; }
        .status-partial { background-color: #ffc107; }
        .metric-card {
            transition: transform 0.2s ease;
        }
        .metric-card:hover {
            transform: translateY(-2px);
        }
        .audit-log {
            max-height: 400px;
            overflow-y: auto;
        }
        .policy-section {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body class="bg-light">
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/admin">
                <i class="bi bi-gear-fill"></i> Admin Dashboard
            </a>
            <div class="navbar-nav ms-auto">
                <span class="navbar-text me-3">
                    <i class="bi bi-person-circle"></i> <%= admin.email %>
                </span>
                <a class="nav-link" href="/auth/logout">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <!-- Page Header -->
        <div class="row mb-4">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/admin">Admin</a></li>
                        <li class="breadcrumb-item active">MFA Management</li>
                    </ol>
                </nav>
                <h1 class="h3 mb-1">
                    <i class="bi bi-shield-lock text-primary"></i>
                    Multi-Factor Authentication Management
                </h1>
                <p class="text-muted">Manage MFA policies, user settings, and view security analytics</p>
            </div>
        </div>

        <!-- Metrics Overview -->
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card metric-card h-100">
                    <div class="card-body text-center">
                        <i class="bi bi-people text-primary" style="font-size: 2rem;"></i>
                        <h3 class="mt-2 mb-1" id="total-users">-</h3>
                        <small class="text-muted">Total Users</small>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card metric-card h-100">
                    <div class="card-body text-center">
                        <i class="bi bi-shield-check text-success" style="font-size: 2rem;"></i>
                        <h3 class="mt-2 mb-1" id="mfa-enabled-users">-</h3>
                        <small class="text-muted">MFA Enabled</small>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card metric-card h-100">
                    <div class="card-body text-center">
                        <i class="bi bi-percentage text-info" style="font-size: 2rem;"></i>
                        <h3 class="mt-2 mb-1" id="adoption-rate">-</h3>
                        <small class="text-muted">Adoption Rate</small>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card metric-card h-100">
                    <div class="card-body text-center">
                        <i class="bi bi-devices text-warning" style="font-size: 2rem;"></i>
                        <h3 class="mt-2 mb-1" id="total-devices">-</h3>
                        <small class="text-muted">Active Devices</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tabs Navigation -->
        <ul class="nav nav-tabs mb-4" id="adminTabs">
            <li class="nav-item">
                <button class="nav-link active" id="users-tab" data-bs-toggle="tab" data-bs-target="#users-panel">
                    <i class="bi bi-people"></i> User Management
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link" id="policies-tab" data-bs-toggle="tab" data-bs-target="#policies-panel">
                    <i class="bi bi-shield-exclamation"></i> Enforcement Policies
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link" id="audit-tab" data-bs-toggle="tab" data-bs-target="#audit-panel">
                    <i class="bi bi-list-ul"></i> Audit Logs
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link" id="analytics-tab" data-bs-toggle="tab" data-bs-target="#analytics-panel">
                    <i class="bi bi-graph-up"></i> Analytics
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content">
            <!-- User Management Tab -->
            <div class="tab-pane fade show active" id="users-panel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="bi bi-people"></i> User MFA Status
                        </h5>
                        <div class="d-flex gap-2">
                            <select class="form-select form-select-sm" id="pool-filter" style="width: 200px;">
                                <option value="">All Pools</option>
                                <!-- Pools will be loaded here -->
                            </select>
                            <button class="btn btn-primary btn-sm" id="bulk-enable-mfa">
                                <i class="bi bi-shield-plus"></i> Bulk Enable MFA
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <table class="table table-striped" id="users-table">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="select-all-users"></th>
                                    <th>User</th>
                                    <th>Pool</th>
                                    <th>MFA Status</th>
                                    <th>Devices</th>
                                    <th>Last Login</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Enforcement Policies Tab -->
            <div class="tab-pane fade" id="policies-panel">
                <div class="row">
                    <div class="col-md-6">
                        <div class="policy-section">
                            <h5><i class="bi bi-shield-exclamation text-warning"></i> Global MFA Policy</h5>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="global-policy" id="policy-optional" value="optional" checked>
                                    <label class="form-check-label" for="policy-optional">
                                        <strong>Optional</strong> - Users can choose to enable MFA
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="global-policy" id="policy-encouraged" value="encouraged">
                                    <label class="form-check-label" for="policy-encouraged">
                                        <strong>Encouraged</strong> - Prompt users to enable MFA
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="global-policy" id="policy-required" value="required">
                                    <label class="form-check-label" for="policy-required">
                                        <strong>Required</strong> - Force all users to enable MFA
                                    </label>
                                </div>
                            </div>
                            <button class="btn btn-primary" id="save-global-policy">
                                <i class="bi bi-check-circle"></i> Save Global Policy
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="policy-section">
                            <h5><i class="bi bi-diagram-3 text-info"></i> Pool-Specific Policies</h5>
                            <div class="mb-3">
                                <label for="policy-pool-select" class="form-label">Select Pool</label>
                                <select class="form-select" id="policy-pool-select">
                                    <option value="">Choose a pool...</option>
                                    <!-- Pools will be loaded here -->
                                </select>
                            </div>
                            <div id="pool-policy-settings" style="display: none;">
                                <div class="mb-3">
                                    <label class="form-label">MFA Requirement</label>
                                    <select class="form-select" id="pool-mfa-policy">
                                        <option value="inherit">Inherit Global Policy</option>
                                        <option value="optional">Optional</option>
                                        <option value="encouraged">Encouraged</option>
                                        <option value="required">Required</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="pool-grace-period">
                                        <label class="form-check-label" for="pool-grace-period">
                                            Grace Period for New Users
                                        </label>
                                    </div>
                                    <input type="number" class="form-control mt-2" id="grace-period-days" placeholder="Days" min="1" max="90" style="display: none;">
                                </div>
                                <button class="btn btn-primary" id="save-pool-policy">
                                    <i class="bi bi-check-circle"></i> Save Pool Policy
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recovery Settings -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-key text-danger"></i> Recovery & Emergency Settings
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Account Recovery</h6>
                                <div class="form-check mb-3">
                                    <input class="form-check-input" type="checkbox" id="allow-admin-reset" checked>
                                    <label class="form-check-label" for="allow-admin-reset">
                                        Allow admin MFA reset
                                    </label>
                                </div>
                                <div class="form-check mb-3">
                                    <input class="form-check-input" type="checkbox" id="allow-email-recovery" checked>
                                    <label class="form-check-label" for="allow-email-recovery">
                                        Allow email-based recovery
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6>Security Settings</h6>
                                <div class="mb-3">
                                    <label for="max-failed-attempts" class="form-label">Max failed attempts before lockout</label>
                                    <input type="number" class="form-control" id="max-failed-attempts" value="5" min="3" max="10">
                                </div>
                                <div class="mb-3">
                                    <label for="lockout-duration" class="form-label">Lockout duration (minutes)</label>
                                    <input type="number" class="form-control" id="lockout-duration" value="15" min="5" max="60">
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-warning" id="save-recovery-settings">
                            <i class="bi bi-shield-exclamation"></i> Save Recovery Settings
                        </button>
                    </div>
                </div>
            </div>

            <!-- Audit Logs Tab -->
            <div class="tab-pane fade" id="audit-panel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="bi bi-list-ul"></i> MFA Audit Logs
                        </h5>
                        <div class="d-flex gap-2">
                            <select class="form-select form-select-sm" id="audit-filter" style="width: 150px;">
                                <option value="">All Events</option>
                                <option value="setup">Device Setup</option>
                                <option value="verification">Verification</option>
                                <option value="removal">Device Removal</option>
                                <option value="failure">Failed Attempts</option>
                                <option value="recovery">Account Recovery</option>
                            </select>
                            <input type="date" class="form-control form-control-sm" id="audit-date-from" style="width: 150px;">
                            <input type="date" class="form-control form-control-sm" id="audit-date-to" style="width: 150px;">
                            <button class="btn btn-outline-primary btn-sm" id="export-audit-logs">
                                <i class="bi bi-download"></i> Export
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="audit-log">
                            <table class="table table-sm" id="audit-table">
                                <thead>
                                    <tr>
                                        <th>Timestamp</th>
                                        <th>User</th>
                                        <th>Event</th>
                                        <th>Details</th>
                                        <th>IP Address</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Audit data will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Analytics Tab -->
            <div class="tab-pane fade" id="analytics-panel">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">MFA Adoption Over Time</h6>
                            </div>
                            <div class="card-body">
                                <canvas id="adoption-chart" height="200"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Device Types Distribution</h6>
                            </div>
                            <div class="card-body">
                                <canvas id="device-chart" height="200"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Failed Verification Attempts</h6>
                            </div>
                            <div class="card-body">
                                <canvas id="failures-chart" height="200"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Pool-wise MFA Status</h6>
                            </div>
                            <div class="card-body">
                                <div id="pool-stats">
                                    <!-- Pool statistics will be loaded here -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- User Actions Modal -->
    <div class="modal fade" id="userActionsModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userActionsTitle">User MFA Actions</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="user-info" class="mb-3">
                        <!-- User info will be displayed here -->
                    </div>
                    <div class="d-grid gap-2">
                        <button class="btn btn-success" id="force-enable-mfa">
                            <i class="bi bi-shield-plus"></i> Force Enable MFA
                        </button>
                        <button class="btn btn-warning" id="reset-user-mfa">
                            <i class="bi bi-arrow-clockwise"></i> Reset MFA Settings
                        </button>
                        <button class="btn btn-danger" id="disable-user-mfa">
                            <i class="bi bi-shield-x"></i> Disable MFA
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.0/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.0/js/dataTables.bootstrap5.min.js"></script>
    <script src="/js/chart.min.js"></script>
    <script>
        // Configuration
        const config = {
            apiBase: '/api/admin/mfa'
        };

        // State
        let usersTable;
        let auditTable;
        let currentUser = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadMetrics();
            initializeUsersTable();
            initializeAuditTable();
            loadPools();
            setupEventListeners();
            loadAnalytics();
        });

        function setupEventListeners() {
            // Tab switching
            document.querySelectorAll('#adminTabs button').forEach(tab => {
                tab.addEventListener('click', function() {
                    const target = this.getAttribute('data-bs-target').replace('#', '').replace('-panel', '');
                    if (target === 'audit') {
                        loadAuditLogs();
                    } else if (target === 'analytics') {
                        loadAnalytics();
                    }
                });
            });

            // Pool filter
            document.getElementById('pool-filter').addEventListener('change', function() {
                usersTable.draw();
            });

            // Policy settings
            document.getElementById('policy-pool-select').addEventListener('change', showPoolPolicySettings);
            document.getElementById('pool-grace-period').addEventListener('change', toggleGracePeriod);

            // Save buttons
            document.getElementById('save-global-policy').addEventListener('click', saveGlobalPolicy);
            document.getElementById('save-pool-policy').addEventListener('click', savePoolPolicy);
            document.getElementById('save-recovery-settings').addEventListener('click', saveRecoverySettings);

            // Bulk actions
            document.getElementById('bulk-enable-mfa').addEventListener('click', bulkEnableMfa);
            document.getElementById('select-all-users').addEventListener('change', toggleSelectAllUsers);

            // User actions
            document.getElementById('force-enable-mfa').addEventListener('click', forceEnableMfa);
            document.getElementById('reset-user-mfa').addEventListener('click', resetUserMfa);
            document.getElementById('disable-user-mfa').addEventListener('click', disableUserMfa);

            // Audit controls
            document.getElementById('export-audit-logs').addEventListener('click', exportAuditLogs);
            document.getElementById('audit-filter').addEventListener('change', function() {
                auditTable.draw();
            });
        }

        async function loadMetrics() {
            try {
                // Mock data - replace with actual API calls
                const metrics = {
                    totalUsers: 1248,
                    mfaEnabledUsers: 432,
                    adoptionRate: 34.6,
                    totalDevices: 658
                };

                document.getElementById('total-users').textContent = metrics.totalUsers.toLocaleString();
                document.getElementById('mfa-enabled-users').textContent = metrics.mfaEnabledUsers.toLocaleString();
                document.getElementById('adoption-rate').textContent = metrics.adoptionRate + '%';
                document.getElementById('total-devices').textContent = metrics.totalDevices.toLocaleString();
            } catch (error) {
                console.error('Error loading metrics:', error);
            }
        }

        function initializeUsersTable() {
            usersTable = $('#users-table').DataTable({
                processing: true,
                serverSide: false, // For demo - should be true for large datasets
                data: generateMockUsers(), // Replace with AJAX call
                columns: [
                    {
                        data: null,
                        orderable: false,
                        render: function(data, type, row) {
                            return `<input type="checkbox" class="user-checkbox" value="${row.id}">`;
                        }
                    },
                    {
                        data: 'email',
                        render: function(data, type, row) {
                            return `
                                <div>
                                    <strong>${data}</strong>
                                    <br><small class="text-muted">${row.name || 'No name'}</small>
                                </div>
                            `;
                        }
                    },
                    { data: 'poolId' },
                    {
                        data: 'mfaEnabled',
                        render: function(data, type, row) {
                            if (data) {
                                return `<span class="status-indicator status-enabled"></span>Enabled`;
                            } else {
                                return `<span class="status-indicator status-disabled"></span>Disabled`;
                            }
                        }
                    },
                    {
                        data: 'deviceCount',
                        render: function(data, type, row) {
                            return `${data} devices (${row.verifiedDevices} verified)`;
                        }
                    },
                    {
                        data: 'lastLogin',
                        render: function(data) {
                            return data ? new Date(data).toLocaleDateString() : 'Never';
                        }
                    },
                    {
                        data: null,
                        orderable: false,
                        render: function(data, type, row) {
                            return `
                                <button class="btn btn-sm btn-outline-primary" onclick="showUserActions('${row.id}')">
                                    <i class="bi bi-gear"></i> Manage
                                </button>
                            `;
                        }
                    }
                ],
                pageLength: 25,
                responsive: true
            });
        }

        function initializeAuditTable() {
            auditTable = $('#audit-table').DataTable({
                processing: true,
                serverSide: false,
                data: generateMockAuditLogs(),
                columns: [
                    {
                        data: 'timestamp',
                        render: function(data) {
                            return new Date(data).toLocaleString();
                        }
                    },
                    { data: 'userEmail' },
                    { data: 'event' },
                    { data: 'details' },
                    { data: 'ipAddress' },
                    {
                        data: 'status',
                        render: function(data) {
                            const badgeClass = data === 'success' ? 'bg-success' : 'bg-danger';
                            return `<span class="badge ${badgeClass}">${data}</span>`;
                        }
                    }
                ],
                order: [[0, 'desc']],
                pageLength: 50
            });
        }

        async function loadPools() {
            // Mock data - replace with actual API call
            const pools = [
                { id: 'default-pool', name: 'Default Pool' },
                { id: 'enterprise-pool', name: 'Enterprise Pool' },
                { id: 'test-pool', name: 'Test Pool' }
            ];

            const poolFilter = document.getElementById('pool-filter');
            const policyPoolSelect = document.getElementById('policy-pool-select');

            pools.forEach(pool => {
                poolFilter.innerHTML += `<option value="${pool.id}">${pool.name}</option>`;
                policyPoolSelect.innerHTML += `<option value="${pool.id}">${pool.name}</option>`;
            });
        }

        function showPoolPolicySettings() {
            const select = document.getElementById('policy-pool-select');
            const settings = document.getElementById('pool-policy-settings');
            
            if (select.value) {
                settings.style.display = 'block';
                // Load current pool policy settings here
            } else {
                settings.style.display = 'none';
            }
        }

        function toggleGracePeriod() {
            const checkbox = document.getElementById('pool-grace-period');
            const input = document.getElementById('grace-period-days');
            input.style.display = checkbox.checked ? 'block' : 'none';
        }

        function showUserActions(userId) {
            currentUser = userId;
            const user = generateMockUsers().find(u => u.id === userId);
            
            document.getElementById('user-info').innerHTML = `
                <div class="card">
                    <div class="card-body">
                        <h6>${user.email}</h6>
                        <p class="mb-1">Pool: ${user.poolId}</p>
                        <p class="mb-1">MFA Status: ${user.mfaEnabled ? 'Enabled' : 'Disabled'}</p>
                        <p class="mb-0">Devices: ${user.deviceCount} (${user.verifiedDevices} verified)</p>
                    </div>
                </div>
            `;

            const modal = new bootstrap.Modal(document.getElementById('userActionsModal'));
            modal.show();
        }

        async function saveGlobalPolicy() {
            const policy = document.querySelector('input[name="global-policy"]:checked').value;
            console.log('Saving global policy:', policy);
            // Implement API call
            showToast('Global policy saved successfully', 'success');
        }

        async function savePoolPolicy() {
            const poolId = document.getElementById('policy-pool-select').value;
            const policy = document.getElementById('pool-mfa-policy').value;
            const gracePeriod = document.getElementById('pool-grace-period').checked;
            const graceDays = document.getElementById('grace-period-days').value;

            console.log('Saving pool policy:', { poolId, policy, gracePeriod, graceDays });
            // Implement API call
            showToast('Pool policy saved successfully', 'success');
        }

        async function saveRecoverySettings() {
            const settings = {
                allowAdminReset: document.getElementById('allow-admin-reset').checked,
                allowEmailRecovery: document.getElementById('allow-email-recovery').checked,
                maxFailedAttempts: document.getElementById('max-failed-attempts').value,
                lockoutDuration: document.getElementById('lockout-duration').value
            };

            console.log('Saving recovery settings:', settings);
            // Implement API call
            showToast('Recovery settings saved successfully', 'success');
        }

        function bulkEnableMfa() {
            const selectedUsers = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => cb.value);
            if (selectedUsers.length === 0) {
                showToast('Please select users to enable MFA for', 'warning');
                return;
            }

            if (confirm(`Enable MFA for ${selectedUsers.length} selected users?`)) {
                console.log('Bulk enabling MFA for users:', selectedUsers);
                // Implement API call
                showToast(`MFA enabled for ${selectedUsers.length} users`, 'success');
            }
        }

        function toggleSelectAllUsers() {
            const selectAll = document.getElementById('select-all-users');
            const checkboxes = document.querySelectorAll('.user-checkbox');
            checkboxes.forEach(cb => cb.checked = selectAll.checked);
        }

        async function forceEnableMfa() {
            if (confirm('Force enable MFA for this user? They will be required to set up MFA on next login.')) {
                console.log('Force enabling MFA for user:', currentUser);
                // Implement API call
                showToast('MFA force-enabled for user', 'success');
                bootstrap.Modal.getInstance(document.getElementById('userActionsModal')).hide();
            }
        }

        async function resetUserMfa() {
            if (confirm('Reset all MFA settings for this user? This will remove all their devices.')) {
                console.log('Resetting MFA for user:', currentUser);
                // Implement API call
                showToast('MFA settings reset for user', 'success');
                bootstrap.Modal.getInstance(document.getElementById('userActionsModal')).hide();
            }
        }

        async function disableUserMfa() {
            if (confirm('Disable MFA for this user? This will remove all their devices and disable MFA.')) {
                console.log('Disabling MFA for user:', currentUser);
                // Implement API call
                showToast('MFA disabled for user', 'success');
                bootstrap.Modal.getInstance(document.getElementById('userActionsModal')).hide();
            }
        }

        function loadAuditLogs() {
            // Reload audit table with current filters
            auditTable.draw();
        }

        function exportAuditLogs() {
            console.log('Exporting audit logs...');
            // Implement export functionality
            showToast('Audit logs export started', 'info');
        }

        function loadAnalytics() {
            // Load charts and analytics
            setTimeout(() => {
                createAdoptionChart();
                createDeviceChart();
                createFailuresChart();
                loadPoolStats();
            }, 100);
        }

        function createAdoptionChart() {
            const ctx = document.getElementById('adoption-chart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                    datasets: [{
                        label: 'MFA Adoption %',
                        data: [12, 19, 25, 28, 31, 35],
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        function createDeviceChart() {
            const ctx = document.getElementById('device-chart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['TOTP', 'SMS', 'Email'],
                    datasets: [{
                        data: [65, 25, 10],
                        backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        function createFailuresChart() {
            const ctx = document.getElementById('failures-chart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                    datasets: [{
                        label: 'Failed Attempts',
                        data: [12, 8, 15, 10, 7, 4, 3],
                        backgroundColor: 'rgba(255, 99, 132, 0.5)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        function loadPoolStats() {
            const pools = [
                { name: 'Default Pool', total: 856, enabled: 294, percentage: 34.3 },
                { name: 'Enterprise Pool', total: 245, enabled: 178, percentage: 72.7 },
                { name: 'Test Pool', total: 147, enabled: 23, percentage: 15.6 }
            ];

            const html = pools.map(pool => `
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        <strong>${pool.name}</strong>
                        <br><small class="text-muted">${pool.enabled}/${pool.total} users</small>
                    </div>
                    <div class="text-end">
                        <span class="badge bg-primary">${pool.percentage}%</span>
                    </div>
                </div>
                <div class="progress mb-3" style="height: 6px;">
                    <div class="progress-bar" style="width: ${pool.percentage}%"></div>
                </div>
            `).join('');

            document.getElementById('pool-stats').innerHTML = html;
        }

        function showToast(message, type = 'info') {
            // Simple alert for now - could be enhanced with proper toast notifications
            alert(message);
        }

        // Mock data generators
        function generateMockUsers() {
            const users = [];
            const pools = ['default-pool', 'enterprise-pool', 'test-pool'];
            const domains = ['example.com', 'company.org', 'test.net'];

            for (let i = 1; i <= 100; i++) {
                const pool = pools[Math.floor(Math.random() * pools.length)];
                const domain = domains[Math.floor(Math.random() * domains.length)];
                const mfaEnabled = Math.random() > 0.6;
                const deviceCount = mfaEnabled ? Math.floor(Math.random() * 3) + 1 : 0;
                
                users.push({
                    id: i.toString(),
                    email: `user${i}@${domain}`,
                    name: `User ${i}`,
                    poolId: pool,
                    mfaEnabled: mfaEnabled,
                    deviceCount: deviceCount,
                    verifiedDevices: Math.floor(deviceCount * 0.8),
                    lastLogin: mfaEnabled ? new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000) : null
                });
            }
            return users;
        }

        function generateMockAuditLogs() {
            const events = ['Device Setup', 'Verification Success', 'Verification Failed', 'Device Removed', 'Account Recovery'];
            const users = ['user1@example.com', 'user2@company.org', 'user3@test.net'];
            const logs = [];

            for (let i = 0; i < 200; i++) {
                const event = events[Math.floor(Math.random() * events.length)];
                logs.push({
                    timestamp: new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000),
                    userEmail: users[Math.floor(Math.random() * users.length)],
                    event: event,
                    details: `${event} - Device: Mobile Phone`,
                    ipAddress: `192.168.1.${Math.floor(Math.random() * 255)}`,
                    status: Math.random() > 0.2 ? 'success' : 'failed'
                });
            }
            return logs.sort((a, b) => b.timestamp - a.timestamp);
        }
    </script>
</body>
</html>
